<!-- <?xml version="1.0" encoding="ISO-8859-9"?> -->

<project name="helloworld-fr" default="all" basedir=".">
		 <property name="bundle.name"      value="helloworld-fr"/>
		 <property name="bundle.suf"       value="jar"/>

		 <property environment="env"/>
	   <property name="felix.path"       value="${env.FELIX_PATH}"/>

     <property name="src.dir"          value="src"/>
		 <property name="res.dir"          value="resources"/>
		 <property name="manifest.file"    value="manifest.mf"/>

     <property name="build.dir"        value="build"/>
     <property name="classes.dir"      value="${build.dir}"/>

     <property name="bundle.dir"       value="."/>

		 	<!-- Create class path from lib and output directories. -->
		 <path id="classpath">
				<pathelement location="${build.dir}" />
 				<fileset dir="${res.dir}">
  					<include name="**/*.jar" />
 				</fileset>
 				<fileset dir="${felix.path}">
  					<include name="bin/felix.jar" />
 				</fileset>
				<fileset dir="../helloworld">
					  <include name="helloworld.jar"/>
				</fileset>
		 </path>

     <target name="check">
	      <echo>
Configuration is: 
  FELIX_PATH:         ${felix.path}
  JAVA_HOME:          ${env.JAVA_HOME}
</echo>
	   </target>

     <target name="init">
		 	 <mkdir dir="${build.dir}"/>
		 	 <mkdir dir="${bundle.dir}"/>
     </target>

		 <target name="resources" depends="init">
			 <copy todir="${build.dir}">
			   <fileset dir="${res.dir}">
				 	 <include name="**" />
				 </fileset>
	     </copy>
	   </target>

		 <target name="compile" depends="init" description="Compile the files of the bundle">
			 <javac srcdir="${src.dir}" destdir="${classes.dir}" listfiles="yes" debug="on">
			  	<classpath refid="classpath" />
					<include name="**/*.java" />
			 </javac>
     </target>

		 <target name="bundle" depends="compile, resources" description="Build the bundle">
		 		<jar jarfile="${bundle.dir}/${bundle.name}.${bundle.suf}" basedir="${build.dir}" manifest="${manifest.file}">
				  <include name="**" />
				</jar>
		 </target>

		 <target name="build" depends="bundle" description="Builds the whole project">
		 </target>

		 <target name="all" depends="build" description="Builds the whole project">
		 				 <echo>You can start your bundle in OSGi with "install file://${env.PWD}/${bundle.name}.${bundle.suf}"</echo>
		 				 <echo>Tip: the bundle ID given by felix identifies the bundle. You can use it to update your bundle (update 8 for example) or start/stop your bundle (start 8 or stop 8). "</echo>
		 </target>

		 <target name="dist" depends="tidy, distclean" description="Construct an archive">
		    <zip destfile="${bundle.name}.src.zip" basedir=".">
						 <include name="**"/> 
				</zip>
		 </target>

     <target name="tidy" description="Removes backup files">
	     <delete includeemptydirs="true" failonerror="no">
         <fileset defaultexcludes="no" dir="." includes="**/*~"/>
	     </delete>
     </target>

		 <target name="clean" description="Removes temporary compilation files">
			 <delete includeemptydirs="true" failonerror="no">
				 <fileset dir="${build.dir}"/>
			 </delete>
		 </target>

		 <target name="distclean" depends="clean" description="Removes previous build">
		   <delete failonerror="no">
			   <fileset file="${bundle.dir}/${bundle.name}*.${bundle.suf}"/>
				 <fileset file="./${bundle.name}.src.zip"/>
			 </delete>
		 </target>
</project>




