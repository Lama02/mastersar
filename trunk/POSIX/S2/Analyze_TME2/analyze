# Fichier: analyze

SEMAINE=2
PROJET=/users/nfs/Etu5/2309965/2008Oct/POSIX/S2/Analyze_TME2

DATA=${PROJET}/Reference
FILES=${PROJET}/Les_fichiers_livres
DIRECTORIES=${PROJET}/Les_repertoires_traites
CRs=${PROJET}/Les_comptes_rendus

mkdir -p ${DIRECTORIES}

# Fichier livre' d'extension tgz ou tar.gz
for i in `ls ${FILES}`
do
  cd ${PROJET}
  rm -f tmp/*
  LA_NOTE=1
  NAME=$i
  NUMERO_SEMAINE=`echo $i | sed "s/.*\.\([0-9]*\)\..*/\1/"`
  EXT=`echo $i | sed "s/.*\.[0-9]*\.\(.*\)/\1/"`
  BASE_NAME=`echo $i | sed "s/\(.*\)\.[0-9]*\..*/\1/"`
echo "!!! $NUMERO_SEMAINE $EXT $BASE_NAME"
export BASE_NAME
mkdir ${DIRECTORIES}/${BASE_NAME}
LIB_INSTALL=${DIRECTORIES}/${BASE_NAME}
RESULTS=${LIB_INSTALL}/Results
mkdir $RESULTS
> ${RESULTS}/COMPTE_RENDU_TME${SEMAINE}.${BASE_NAME}
CR=${RESULTS}/COMPTE_RENDU_TME${SEMAINE}.${BASE_NAME}

# Numero de semaine correct
if [ ${NUMERO_SEMAINE} != ${SEMAINE} ] ; then echo "$LA_NOTE <- note/20 numero de semaine incorrect" >> ${CR} ; continue ;fi

LA_NOTE=`expr $LA_NOTE + 1`
echo "Etape: numero de semaine correct -> OK" >> ${CR}

# Extension tgz ou tar.gz correcte
  if [ $EXT != tgz ]
  then if [ $EXT != tar.gz ] ; then echo "$LA_NOTE <- note/20 fichier d'extension incorrecte (ni tgz, ni tar.gz)" >> ${CR} ; continue ;fi
  fi

echo "Etape: fichier d'extension correcte (tgz ou tar.gz) -> OK" >> ${CR}

# Fichier compresse' selon tar ou gzip
tar tzf ${FILES}/$NAME > tmp/tar_results
if [ $? -ne 0 ] ; then echo "$LA_NOTE <- note/20 fichier non compresse' selon tar ou gzip" >> ${CR}; continue ;fi

LA_NOTE=`expr $LA_NOTE + 1`
echo "Etape: fichier compresse' -> OK" >> ${CR}

# Racine de l'arbre anonyme
sort tmp/tar_results | head -1 | grep '^\./' > tmp/tartzf_file
if [ $? -ne 0 ] ; then echo "$LA_NOTE <- note/20 racine de l'arbre non anonyme" >> ${CR}; continue ;fi

# Structure de l'arbre correcte
#diff ${DATA}/tartzf_file tmp/tartzf_file > tmp/tartzf_files_diff
#if [ -s tmp/tartzf_files_diff ] ; then echo "$LA_NOTE <- note/20 arbre mal structure'" >> ${CR} ; continue ;fi

#echo "Etape: arbre bien structure' -> OK" >> ${CR}

cd ${LIB_INSTALL} ; tar xzf ${FILES}/$NAME ; cd ${PROJET}

# Arbre nettoye'
find ${LIB_INSTALL} -name '*.o' -print -o -name '*.a' -print -o -name '*~' -print -o -name '\#*\#' -print -o -name '.*' -print > ${RESULTS}/find.out 2> ${RESULTS}/find.err
if [ -s ${RESULTS}/find.out ] ; then echo "$LA_NOTE <- note/20 arbre non nettoye'" >> ${CR} ; continue ;fi

echo "Etape: arbre nettoye' -> OK" >> ${CR}

# Structure de l'arbre correcte
ls -F ${LIB_INSTALL} | grep -v '/$' | sort | diff - Reference/out_ls_regular_files
if [ $? -ne 0 ] ; then echo "$LA_NOTE <- note/20 fichier(s) sous la racine autres que makefile et README" >> ${CR}; continue ;fi

echo "Etape: seuls fichier(s) sous la racine: makefile et README -> OK" >> ${CR}

#ls -F ${LIB_INSTALL} | grep '/$' | sort | tee tmp/out_ls_directories | diff - Reference/out_ls_directories
#if [ $? -ne 0 ] ; then echo "$LA_NOTE <- note/20 revoir repertoire(s) bin, include, lib, obj, src_C" >> ${CR}; continue ;fi

LA_NOTE=`expr $LA_NOTE + 1`
echo "Etape: repertoire(s) -> OK" >> ${CR}

# Compilation des fichiers
cd ${LIB_INSTALL}
w_or_e=0;
for source_filename in `ls src_C`
do
  echo "GCC: ${source_filename}"

  # Definition de la constante _POSIX_SOURCE
  grep '^#define _POSIX_SOURCE' src_C/${source_filename} > /dev/null
  if [ $? -ne 0 ] ; then w_or_e=2 ; break ;fi

  gcc -Wall -ansi -pedantic -O -c -o xxx src_C/${source_filename} -I include 2> warnings_or_errors
  if [ $? -ne 0 ] ; then w_or_e=1 ; break ; fi
#  if [ -s warnings_or_errors ] ; then w_or_e=1 ; break ;fi
done

if [ ${w_or_e} -eq 2 ] ; then echo "$LA_NOTE <- note/20 definir la constante _POSIX_SOURCE" >> ${CR} ; continue ; fi
echo "Etape: definition de la constante _POSIX_SOURCE -> OK" >> ${CR}
if [ ${w_or_e} -eq 1 ] ; then echo "$LA_NOTE <- note/20 warning(s) ou erreur(s) de compilation" >> ${CR} ; echo "!!! LE FICHIER compresse' N'EST PAS LIVRABLE dans l'etat !!! Encore un effort !!!" >> ${CR} ; continue ; fi

echo "Etape: compilation sans warning(s), sans erreur(s) -> OK" >> ${CR}
echo "!!! LE FICHIER compresse' EST LIVRABLE dans l'etat !!! Merci pour vos efforts !!!" >> ${CR}

cd ${PROJET}

export PROJET DIRECTORIES LIB_INSTALL CRs

#echo "$LA_NOTE <- note/20" >> ${CR}
done

mkdir -p ${CRs}
cp ${DIRECTORIES}/*/Results/COMPTE_RENDU_TME${SEMAINE}.* ${CRs}

exit 0
